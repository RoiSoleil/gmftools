/*
* generated by Xtext
*/
grammar InternalEntities;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.cg2009.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.cg2009.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.xtext.cg2009.services.EntitiesGrammarAccess;

}

@parser::members {
 
 	private EntitiesGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EntitiesGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

}




// Entry rule entryRuleModel
entryRuleModel :
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity :
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty :
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
(rule__Property__Alternatives)
{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleProperty
entryRuleSimpleProperty :
{ before(grammarAccess.getSimplePropertyRule()); }
	 ruleSimpleProperty
{ after(grammarAccess.getSimplePropertyRule()); } 
	 EOF 
;

// Rule SimpleProperty
ruleSimpleProperty 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSimplePropertyAccess().getGroup()); }
(rule__SimpleProperty__Group__0)
{ after(grammarAccess.getSimplePropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceProperty
entryRuleReferenceProperty :
{ before(grammarAccess.getReferencePropertyRule()); }
	 ruleReferenceProperty
{ after(grammarAccess.getReferencePropertyRule()); } 
	 EOF 
;

// Rule ReferenceProperty
ruleReferenceProperty 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getReferencePropertyAccess().getGroup()); }
(rule__ReferenceProperty__Group__0)
{ after(grammarAccess.getReferencePropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Property__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getSimplePropertyParserRuleCall_0()); }
	ruleSimpleProperty
{ after(grammarAccess.getPropertyAccess().getSimplePropertyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getReferencePropertyParserRuleCall_1()); }
	ruleReferenceProperty
{ after(grammarAccess.getPropertyAccess().getReferencePropertyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__TypeAlternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getTypeStringKeyword_3_0_0()); }

	'String' 

{ after(grammarAccess.getSimplePropertyAccess().getTypeStringKeyword_3_0_0()); }
)

    |(
{ before(grammarAccess.getSimplePropertyAccess().getTypeNumberKeyword_3_0_1()); }

	'Number' 

{ after(grammarAccess.getSimplePropertyAccess().getTypeNumberKeyword_3_0_1()); }
)

    |(
{ before(grammarAccess.getSimplePropertyAccess().getTypeBoolKeyword_3_0_2()); }

	'Bool' 

{ after(grammarAccess.getSimplePropertyAccess().getTypeBoolKeyword_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceProperty__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePropertyAccess().getOneKeyword_2_0()); }

	'one' 

{ after(grammarAccess.getReferencePropertyAccess().getOneKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getReferencePropertyAccess().getManyAssignment_2_1()); }
(rule__ReferenceProperty__ManyAssignment_2_1)
{ after(grammarAccess.getReferencePropertyAccess().getManyAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelAction_0()); }
(

)
{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)

	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getEntitiesAssignment_1()); }
(rule__Model__EntitiesAssignment_1)*
{ after(grammarAccess.getModelAccess().getEntitiesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }

	'entity' 

{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)

	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
(rule__Entity__NameAssignment_1)
{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)

	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_2()); }
(rule__Entity__Group_2__0)?
{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)

	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
)

	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getPropertiesAssignment_4()); }
(rule__Entity__PropertiesAssignment_4)*
{ after(grammarAccess.getEntityAccess().getPropertiesAssignment_4()); }
)

	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Entity__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }
)

	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
(rule__Entity__SuperTypeAssignment_2_1)
{ after(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getPropertyKeyword_0()); }

	'property' 

{ after(grammarAccess.getSimplePropertyAccess().getPropertyKeyword_0()); }
)

	rule__SimpleProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getNameAssignment_1()); }
(rule__SimpleProperty__NameAssignment_1)
{ after(grammarAccess.getSimplePropertyAccess().getNameAssignment_1()); }
)

	rule__SimpleProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getSimplePropertyAccess().getColonKeyword_2()); }
)

	rule__SimpleProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleProperty__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getTypeAssignment_3()); }
(rule__SimpleProperty__TypeAssignment_3)
{ after(grammarAccess.getSimplePropertyAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReferenceProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePropertyAccess().getNameAssignment_0()); }
(rule__ReferenceProperty__NameAssignment_0)
{ after(grammarAccess.getReferencePropertyAccess().getNameAssignment_0()); }
)

	rule__ReferenceProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePropertyAccess().getRefsKeyword_1()); }

	'refs' 

{ after(grammarAccess.getReferencePropertyAccess().getRefsKeyword_1()); }
)

	rule__ReferenceProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePropertyAccess().getAlternatives_2()); }
(rule__ReferenceProperty__Alternatives_2)?
{ after(grammarAccess.getReferencePropertyAccess().getAlternatives_2()); }
)

	rule__ReferenceProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceProperty__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePropertyAccess().getTypeAssignment_3()); }
(rule__ReferenceProperty__TypeAssignment_3)
{ after(grammarAccess.getReferencePropertyAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Model__EntitiesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getEntitiesEntityParserRuleCall_1_0()); }
	ruleEntity{ after(grammarAccess.getModelAccess().getEntitiesEntityParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
(
{ before(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__PropertiesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getPropertiesPropertyParserRuleCall_4_0()); }
	ruleProperty{ after(grammarAccess.getEntityAccess().getPropertiesPropertyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSimplePropertyAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getTypeAlternatives_3_0()); }
(rule__SimpleProperty__TypeAlternatives_3_0)
{ after(grammarAccess.getSimplePropertyAccess().getTypeAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceProperty__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePropertyAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getReferencePropertyAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceProperty__ManyAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePropertyAccess().getManyManyKeyword_2_1_0()); }
(
{ before(grammarAccess.getReferencePropertyAccess().getManyManyKeyword_2_1_0()); }

	'many' 

{ after(grammarAccess.getReferencePropertyAccess().getManyManyKeyword_2_1_0()); }
)

{ after(grammarAccess.getReferencePropertyAccess().getManyManyKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceProperty__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePropertyAccess().getTypeEntityCrossReference_3_0()); }
(
{ before(grammarAccess.getReferencePropertyAccess().getTypeEntityIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getReferencePropertyAccess().getTypeEntityIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getReferencePropertyAccess().getTypeEntityCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


